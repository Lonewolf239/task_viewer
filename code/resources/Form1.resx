<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>